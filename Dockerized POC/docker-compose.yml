version: "3"

networks:
  app-network:
    driver: bridge
    
services:
  zookeeper-server:
    container_name: zookeeper-server
    image: 'bitnami/zookeeper:latest'
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
 
  kafka-server:
    container_name: kafka-server
    image: 'bitnami/kafka:latest'
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-server

  mysql:
    container_name: mysql
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: pocdb
    ports:
      - 3307:3306
    volumes:
      - /var/lib/mysqldb

    # networks:
    #   - app-network

  product-service:
    container_name: product-app
    image: product-service
    build: product-service2/.
    ports: 
     - 8091:8091
    depends_on:
      - mysql
      - kafka-server
    restart: on-failure
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: pocdb
      MYSQL_PORT: '3306'
      KAFKA_HOST: kafka-server
      KAFKA_PORT: '9092'
      # SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3307/productdb
      # SPRING_DATASOURCE_USERNAME: root
      # SPRING_DATASOURCE_PASSWORD: root
    # networks:
    #   - app-network
      # MYSQL_HOST: mysqldb
      # MYSQL_USER: root
      # MYSQL_PASSWORD: root
      # MYSQL_DATABASE: productdb
      # MYSQL_PORT: '3306'
      # KAFKA_HOST: kafka-server
      # KAFKA_PORT: '9092'

  cart-service:
    container_name: cart-app
    image: cart-service
    build: cart-service3/.
    ports: 
     - 8093:8093
    depends_on:
      - mysql
    restart: on-failure
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: pocdb
      MYSQL_PORT: '3306'
      GRPC-SERVER-PORT: '9099'
    

  cartgateway-service:
    container_name: cartgateway-app
    image: cartgateway-service
    build: cartgateway-service/.
    ports:
     - 8094:8094
    restart: always
    environment:
      GRPC-SERVER-HOST: cart-service
      GRPC-SERVER-PORT: '9099'

  
  #  - kafka-server
  #   restart: always
  #   networks:
  #     - app-network
  
  logger-microservice:
    container_name: logger-app
    restart: on-failure
    image: logger-microservice
    build: logger-service2/.
    ports:
     - 8092:8092
    environment:
      MONGODB_HOST: mongodb
      MONGODB_USER: root
      MONGODB_PASSWORD: root
      MONGODB_DATABASE: loggerdb
      MONGODB_PORT: '27017'
      KAFKA_HOST: kafka-server
      KAFKA_PORT: '9092'
    depends_on:
      - mongodb
      - kafka-server
    volumes:
     - /var/lib/mysql
    # networks:
    #  - app-network
   
  mongodb:
    container_name: mongodb
    image: mongo
    restart: on-failure
    volumes:
      - /var/lib/mongodb
    ports:
      - 27018:27017
    environment:
      MONGODB_DATABASE: loggerdb
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
  

  Kong-database:
    container_name: Kong-database
    image: postgres:9.6
    ports:
    - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kongpass
    volumes:
      - ./kong_data:/var/lib/postgresql/data

  Kong-migrate:
    container_name: Kong-migrate
    image: kong/kong-gateway:2.8.1.0-alpine 
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=Kong-database
      - KONG_PG_PASSWORD=kongpass
      - KONG_PASSWORD=test
    links:
      - Kong-database
    depends_on:
      - Kong-database
    command: "kong migrations bootstrap"

  Kong-gateway:
    container_name: Kong-Gateway
    image: kong/kong-gateway:2.8.0.0-alpine
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=Kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kongpass
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_GUI_URL=http://localhost:8002
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
      - 8002:8002
      - 8445:8445
      - 8003:8003
      - 8004:8004
    depends_on:
      - Kong-migrate
      - Kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong-gateway:8001"]
      interval: 5s
      timeout: 2s
      retries: 15



 